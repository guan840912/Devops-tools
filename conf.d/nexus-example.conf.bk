worker_processes 2;

events {

  worker_connections 1024;
}

http {

  error_log /var/log/nginx/error.log warn;
  access_log /dev/null;
  proxy_intercept_errors off;
  proxy_send_timeout 120;
  proxy_read_timeout 300;

  upstream nexus {

    server nexus:8081;
  }

  upstream registry {

    server nexus:5000;
  }

  server {

    listen 80;
    listen 443 ssl http2;
    server_name nexus.cathayins-dev.com;
    keepalive_timeout 5 5;
    proxy_buffering off;
    # allow large uploads
    client_max_body_size 1G;

    ssl_certificate /ssl/fullchain.pem;
    ssl_certificate_key /ssl/privkey.pem;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    location / {

      # redirect to docker registry
      proxy_pass http://nexus;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }

  server {

    listen 80;
    listen 443 ssl http2;
    server_name nexus-registry.cathayins-dev.com;
    keepalive_timeout 5 5;
    proxy_buffering off;
    # allow large uploads
    client_max_body_size 1G;

    ssl_certificate /ssl/fullchain.pem;
    ssl_certificate_key /ssl/privkey.pem;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    if ($scheme != "https") {

      return 301 https://$host$request_uri;
    }
    location / {

      # redirect to docker registry
      proxy_pass http://registry;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }

}